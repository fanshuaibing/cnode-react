{"version":3,"sources":["request/http.js","components/Header.js","components/Timer.js","components/Types.js","components/ListItem.js","components/ListView.js","components/Artical.js","components/UserInfo.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","Url","Request","getTopics","data","Promise","resolve","reject","get","params","then","res","getDetail","id","getUserInfo","username","Header","style","display","justifyContent","alignItems","to","width","height","src","alt","Timer","props","str","date","Date","time","getTime","parseInt","Types","whichTags","item","top","good","className","tab","ListItem","key","author","loginname","avatar_url","paddingRight","reply_count","visit_count","color","title","marginLeft","marginRight","minWidth","last_reply_at","TabPane","ListView","useState","count","setCount","setTab","currentPage","setCurrentPage","useEffect","handlePageChange","page","limit","length","background","defaultActiveKey","onChange","map","index","defaultCurrent","current","total","size","Artical","useParams","history","useHistory","artical","setArtical","setAuthor","console","log","margin","span","padding","borderBottom","onClick","push","dangerouslySetInnerHTML","__html","content","UserInfo","Location","userInfo","setUserInfo","toArtical","score","create_at","recent_topics","slice","topic","recent_replies","textAlign","Content","Footer","Sider","App","theme","flexDirection","flexGrow","minHeight","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9f3f010.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = \"https://cnodejs.org/api/v1\"\n\n\nlet Url = {\n  getTopics: \"/topics\",\n  getDetail: \"/topic/\",\n  getUserInfo: \"/user/\"\n}\n\nconst Request = {\n  getTopics(data) {\n    return new Promise((resolve, reject) => {\n      axios.get(Url.getTopics, {\n        params: data\n      })\n        .then(res => {\n          resolve(res)\n        })\n    })\n  },\n  getDetail(id) {\n    return new Promise((resolve, reject) => {\n      axios.get(Url.getDetail + id)\n        .then(res => {\n          resolve(res)\n        })\n    })\n  },\n  getUserInfo(username) {\n    return new Promise((resolve, reject) => {\n      axios.get(Url.getUserInfo + username)\n        .then(res => {\n          resolve(res)\n        })\n    })\n  }\n}\n\nexport default Request;\n","import React, { useState, useEffect } from 'react';\nimport Request from '../request/http'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction Header() {\n  return (\n    <div style={ { display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" } }>\n      <Link to=\"/\">\n        <img style={ { width: \"150px\", height: \"40px\" } }\n          src=\"https://static2.cnodejs.org/public/images/cnodejs_light.svg\" alt=\"\" />\n      </Link>\n      <div >\n        <Link to=\"/\" >首页</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","const Timer = (props) => {\n  let str = props|| \"\"\n  if (!str) return ''\n  let date = new Date(str)\n  let time = new Date().getTime() - date.getTime() //现在的时间-传入的时间 = 相差的时间（单位 = 毫秒）\n  if (time < 0) {\n    return ''\n  } else if ((time / 1000 < 30)) {\n    return '刚刚'\n  } else if (time / 1000 < 60) {\n    return parseInt((time / 1000)) + '秒前'\n  } else if ((time / 60000) < 60) {\n    return parseInt((time / 60000)) + '分钟前'\n  } else if ((time / 3600000) < 24) {\n    return parseInt(time / 3600000) + '小时前'\n  } else if ((time / 86400000) < 31) {\n    return parseInt(time / 86400000) + '天前'\n  } else if ((time / 2592000000) < 12) {\n    return parseInt(time / 2592000000) + '月前'\n  } else {\n    return parseInt(time / 31536000000) + '年前'\n  }\n}\n\n\nexport default Timer;\n","import React from \"react\"\r\n\r\n\r\nfunction Types(props) {\r\n  const whichTags = () => {\r\n    if (props.item.top || props.item.good) {\r\n      return \"tags\"\r\n    }else {\r\n      return \"gray tags\"\r\n    }\r\n  }\r\n\r\n  if (props.item.top) {\r\n    return (\r\n      <span className={whichTags()}>置顶</span>\r\n    )\r\n  }\r\n  else if (props.item.good) {\r\n    return (\r\n      <span className={whichTags()}>精华</span>\r\n    )\r\n  }\r\n  else if (props.item.tab === 'ask') {\r\n    return <span className={whichTags()}>问答</span>\r\n  }\r\n  else if (props.item.tab === 'share') {\r\n    return <span className={whichTags()}>分享</span>\r\n  }\r\n  else {\r\n    return <span className={whichTags()}>招聘</span>\r\n  }\r\n}\r\n\r\n\r\nexport default Types;\r\n","import React, {useState, useEffect} from 'react';\nimport Request from '../request/http'\n\nimport \"../styles/listItem.less\"\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport Timer from \"./Timer\"\nimport Types from \"./Types\"\n\n\n\n\n\n\nfunction ListItem(props) {\n\n\n  return <div className=\"listItem-container\" key={props.item.id}>\n    <Link className=\"avatar_wrapper\" to={`/user/${props.item.author.loginname}`}>\n      <img className=\"avatar\"\n           src={props.item.author.avatar_url}\n           alt=\"\"/>\n    </Link>\n\n    <Types item={ props.item }/>\n    <span style={{paddingRight: \"10px\"}}>\n        {props.item.reply_count}/{props.item.visit_count}\n      </span>\n    <Link className=\"title\" to={`/artical/${props.item.id}`} style={{color: \"black\"}}>\n      {props.item.title}\n    </Link>\n    <div style={{marginLeft:\"auto\",marginRight:\"5px\", minWidth:\"50px\"}}>\n      {Timer(props.item.last_reply_at)}\n    </div>\n  </div>\n}\n\n\nexport default ListItem;\n","import React, {useState, useEffect} from 'react';\nimport Request from '../request/http'\n\nimport {Tabs, Spin, Pagination} from \"antd\"\nimport ListItem from \"./ListItem\"\nimport \"../styles/listview.less\"\nconst {TabPane} = Tabs;\n\nfunction ListView(props) {\n  const [count, setCount] = useState([])\n  const [tab, setTab] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const tabs = [\"全部\", \"精华\", \"分享\", \"问答\", \"招聘\"]\n\n  useEffect(\n    () => {\n      if(tab){\n        handlePageChange({page: currentPage, tab, limit: 20})\n      }else {\n        handlePageChange({page: currentPage, limit: 20})\n      }\n    },\n    [currentPage, tab]\n  )\n\n\n\n  const handlePageChange = (data) => {\n    Request.getTopics(data)\n      .then(res => {\n        setCount(res.data.data)\n      })\n  }\n\n  const handleCurrentChange = (page)=>{\n    setCurrentPage(page)\n  }\n\n\n  const handleTabChange = (key) => {\n    switch (key) {\n      case \"1\":\n        setTab(\"good\")\n        setCurrentPage(1)\n        break\n      case \"2\":\n        setTab(\"share\")\n        setCurrentPage(1)\n        break\n      case \"3\":\n        setTab(\"ask\")\n        setCurrentPage(1)\n        break\n      case \"4\":\n        setTab(\"job\")\n        setCurrentPage(1)\n        break\n      default:\n        setTab(\"\")\n        setCurrentPage(1)\n    }\n  }\n  if (!count.length) {\n    return (\n      <div className=\"listview-container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        <Spin size=\"large\"/>\n      </div>\n    )\n  }\n  return (\n    <div className=\"listview-container\">\n      <Tabs style={{background: \"#f6f6f6\"}} defaultActiveKey=\"0\" onChange={handleTabChange}>\n        {\n          tabs.map((tab, index) =>\n            <TabPane tab={tab} key={index}>\n              {count.map((item, index) =>\n                <div key={item.id}>\n                  <ListItem item={item}/>\n                </div>\n              )}\n            </TabPane>\n          )\n        }\n      </Tabs>\n      <Pagination className=\"list-pagination\"\n                  defaultCurrent={1}\n                  current={currentPage}\n                  total={500}\n                  onChange={handleCurrentChange} />\n    </div>\n  )\n}\n\nexport default ListView;\n","import React, {useState, useEffect} from 'react';\nimport Request from '../request/http'\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport {Row, Col} from \"antd\"\nimport \"../styles/markdown.css\"\nimport \"../styles/artical.less\"\nimport Types from \"./Types\"\n\n\nfunction Artical(props) {\n  let {id} = useParams()\n  let history = useHistory()\n  let [artical, setArtical] = useState({})\n  let [author, setAuthor] = useState({})\n  useEffect(() => {\n    Request.getDetail(id)\n      .then(res => {\n        setArtical(res.data.data)\n        Request.getUserInfo(res.data.data.author.loginname)\n          .then(res => {\n            console.log(res.data.data)\n            setAuthor(res.data.data)\n          })\n      })\n  }, [id])\n\n  const toUser = (loginname) => {\n    history.push(`/user/${loginname}`)\n  }\n\n\n  return (\n    <div className=\"artical-container\">\n      <Row style={{margin: \" 0 10px\"}}>\n        <Col span={24}>\n          <Row style={{background: 'white', padding: \"10px\"}}>\n            <Col span={24} style={{borderBottom: \"1px solid #e1e1e1\"}}>\n              <div className=\"artical-header\">\n                <Types item={artical}>\n                </Types>\n                <h1 style={{margin: \"0\"}}>\n                  {artical.title}\n                </h1>\n              </div>\n              <span className=\"img-wrapper\" onClick={()=>toUser(author.loginname)}>\n                <img\n                  src={author.avatar_url}\n                  alt=\"\"/>\n                {author.loginname}\n              </span>\n\n\n              <div>浏览量 {artical.visit_count}</div>\n            </Col>\n            <Col span={24}>\n              <div className=\"markdown-body\"\n                   dangerouslySetInnerHTML={{__html: artical.content}}/>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Artical\n","import React, {useState, useEffect} from 'react';\nimport Request from '../request/http'\nimport {useParams, Link, useHistory} from \"react-router-dom\";\nimport {Row, Col,Spin } from \"antd\"\nimport Timer from \"./Timer\"\nimport \"../styles/userInfo.less\"\n\nfunction UserInfo(props) {\n  let {username} = useParams()\n  const Location = useHistory()\n  const [userInfo, setUserInfo] = useState({})\n  console.log(userInfo.length)\n  useEffect(() => {\n    Request.getUserInfo(username)\n      .then(res => {\n        setUserInfo(res.data.data)\n      })\n\n  }, [username])\n\n  const toArtical = (id) => {\n    Location.push(`/artical/${id}`)\n  }\n  if(!userInfo.loginname){\n    return (\n      <div className=\"userInfo-container\" style={{textAlign:\"center\"}}>\n        <Spin size=\"large\"/>\n      </div>\n    )\n  }\n  return (\n    <div className=\"userInfo-container\">\n      <Row style={{background: \"white\"}}>\n        <Col style={{background: \"#cfcfcf\"}}>\n          <h3>个人主页</h3>\n        </Col>\n        <Col span={24} >\n          <img src={userInfo.avatar_url} alt={userInfo.loginname}/>\n          {userInfo.loginname}\n        </Col>\n\n        <Col span={24} className=\"info\">\n          {userInfo.score}积分\n        </Col>\n        <Col span={24} className=\"info\">\n          注册时间： {Timer(userInfo.create_at)}\n        </Col>\n      </Row>\n\n      <Row className=\"topics\" >\n        <Col style={{background: \"#cfcfcf\"}}>\n          <h3>创建的主题</h3>\n        </Col>\n\n        {\n          userInfo.recent_topics && userInfo.recent_topics.slice(0, 5).map((topic) =>\n            <Col className=\"title\"\n                 key={topic.id}\n                 span={24}\n                 onClick={() => toArtical(topic.id)}>\n              {topic.title}\n            </Col>\n          )\n        }\n      </Row>\n\n      <Row className=\"topics\">\n        <Col style={{background: \"#cfcfcf\"}}>\n          <h3>回复的主题</h3>\n        </Col>\n        {\n          userInfo.recent_replies && userInfo.recent_replies.slice(0, 5).map((topic) =>\n            <Col className=\"title\"\n                 key={topic.id} span={24}\n                 onClick={() => toArtical(topic.id)}>\n              {topic.title}\n            </Col>\n          )\n        }\n      </Row>\n    </div>\n  )\n}\n\n\nexport default UserInfo\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Layout , BackTop } from 'antd';\nimport './App.css';\n\n\n\n\nimport VHeader from \"./components/Header\";\nimport VListView from \"./components/ListView.js\";\nimport VArtical from \"./components/Artical\";\nimport VUserInfo from \"./components/UserInfo\";\n\n\nconst { Header, Footer, Sider, Content } = Layout;\nfunction App() {\n  return (\n    <div className=\"cnode-container\">\n      <BackTop>\n      </BackTop>\n      <Layout theme=\"light\" style={{display:\"flex\", height:\"100%\", flexDirection:\"column\"}}>\n        <Header style={ { background: \"#444444\" } }>\n          <VHeader />\n        </Header>\n        <Content style={{ background: \"#e1e1e1\", flexGrow:\"1\",minHeight:\"calc(100vh - 64px)\"}}>\n          <Switch>\n            <Route path=\"/artical/:id\">\n              <VArtical />\n            </Route>\n            <Route path=\"/user/:username\">\n              <VUserInfo />\n            </Route>\n            <Route path=\"/\">\n              <VListView />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'github-markdown-css'\nimport {\n  BrowserRouter as Router,\n\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}